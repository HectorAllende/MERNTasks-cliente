{"version":3,"sources":["context/alertas/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/proyectoContext.js","components/proyecto/NuevoProyecto.js","context/tareas/tareaContext.js","components/proyecto/Proyecto.js","components/proyecto/ListadoProyectos.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyecto/Proyectos.js","context/proyectos/proyectoReducer.js","types/index.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/token.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","App.js","serviceWorker.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","AuthContext","mensaje","autenticado","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","guardarUsuario","onchange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","onChange","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","onClick","tareaContext","Proyecto","proyectoActual","obtenerTareas","_id","ListadoProyectos","proyectos","obtenerProyectos","TransitionGroup","map","CSSTransition","key","timeout","classNames","Sidebar","Barra","usuarioAutenticado","cerrarSesion","FormTarea","tareasContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","actualizarTarea","limpiarTarea","guardarTarea","tarea","Tarea","eliminarTarea","guardarTareaActual","cambiarEstado","estado","seleccionarTarea","ListadoTareas","eliminarProyecto","tareasproyecto","Proyectos","state","action","console","log","payload","filter","clienteAxios","axios","create","baseURL","process","ProyectoState","useReducer","proyectoReducer","dispatch","a","get","resultado","data","post","proyectoId","delete","Provider","children","TareaState","TareaReducer","params","tareas","put","AlertaState","alertaReducer","setTimeout","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","datos","respuesta","response","RutaPrivada","Component","component","render","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f9bf698c.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nconst alertaContext = createContext();\r\n\r\nexport default alertaContext;\r\n","import {createContext }from 'react';\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;","import React, { useContext, useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst Login = (props) => {\r\n\r\n    const alertaContext = useContext(AlertaContext)\r\n    const {alerta, mostrarAlerta} = alertaContext;\r\n\r\n    const authContext = useContext(AuthContext)\r\n    const {mensaje, autenticado, iniciarSesion}= authContext\r\n\r\n    useEffect(() => {\r\n        if(autenticado){\r\n            props.history.push('/proyectos');\r\n        }\r\n   \r\n        if(mensaje){\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [mensaje, autenticado, props.history])\r\n\r\n    const [usuario, guardarUsuario]= useState({\r\n        email:'',\r\n        password:''\r\n    })\r\n\r\n    const {email, password}= usuario;\r\n\r\n    const onchange= e =>{\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit=e=>{\r\n        e.preventDefault()\r\n        if(email.trim() ===''|| password.trim() ===''){\r\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error')\r\n        }\r\n\r\n        iniciarSesion({email, password})\r\n    }\r\n\r\n\r\n    return ( \r\n\r\n        <div className=\"form-usuario\">\r\n            {alerta ? ( <div className={`alerta ${alerta.categoria}`}>{alerta.msg} </div>): null}\r\n\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Iniciar Sesión</h1>\r\n\r\n                <form\r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <div className=\"campo-form\">\r\n                    <label htmlFor=\"email\" >Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Ingrese Email\"\r\n                            value={email}\r\n                            onChange={onchange}\r\n                        />                            \r\n                    </div>\r\n\r\n                   <div className=\"campo-form\">\r\n                    <label htmlFor=\"password\" >Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Ingrese password\"\r\n                            value={password}\r\n                            onChange={onchange}\r\n                        />                            \r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <input\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primario btn-block\"\r\n                            value=\"Iniciar Sesión\"\r\n                        />\r\n                    </div>\r\n\r\n\r\n                </form>\r\n\r\n                <Link to={'/nueva-cuenta'} className=\"enlace-cuenta\">\r\n                    Obtener Cuenta\r\n                </Link>\r\n\r\n            </div>\r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default Login;","import React, { useContext, useState, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext'\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst NuevaCuenta = (props) => {\r\n\r\n    // extraer los valores del context\r\n\r\n    const alertaContext = useContext(AlertaContext)\r\n\r\n    const {alerta, mostrarAlerta}= alertaContext;\r\n\r\n    const authContext = useContext(AuthContext)\r\n    const {mensaje, autenticado, registrarUsuario}= authContext\r\n\r\n    // En caso de que el usuario se haya autenticado o registrado o sea un registro\r\n    useEffect(() => {\r\n        if(autenticado) {\r\n            props.history.push('/proyectos');\r\n        }\r\n\r\n        if(mensaje) {\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [mensaje, autenticado, props.history]);\r\n\r\n    // State para iniciar sesion\r\n\r\n    const [usuario, guardarUsuario]= useState({\r\n        nombre:'',\r\n        email:'',\r\n        password:'',\r\n        confirmar:''\r\n\r\n    })\r\n\r\n    const {nombre, email, password, confirmar}= usuario;\r\n\r\n    const onchange= e =>{\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit=e=>{\r\n        e.preventDefault()\r\n\r\n        // Validar que no haya campos vacios\r\n\r\n        if (nombre.trim() === '' ||\r\n            email.trim() === '' ||\r\n            password.trim() === '' ||\r\n            confirmar.trim() === ''){\r\n                mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\r\n                return;\r\n        }\r\n\r\n        // Password minimo de 6 caracteres\r\n\r\n        if(password.length < 6){\r\n            mostrarAlerta('El password debe ser al menos de 6 caracteres', 'alerta-error')\r\n            return;\r\n        }\r\n\r\n        // Los 2 password deben ser iguales\r\n\r\n        if(password !== confirmar){\r\n            mostrarAlerta('Los passwords no son iguales', 'alerta-error' )\r\n        }\r\n\r\n        // Pasarlo al action\r\n        registrarUsuario({\r\n            nombre,\r\n            email,\r\n            password            \r\n        });\r\n\r\n    }\r\n\r\n\r\n    return ( \r\n\r\n        <div className=\"form-usuario\">\r\n\r\n                 { alerta ? ( <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div> )  : null }\r\n\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Obtener una cuenta</h1>\r\n\r\n                <form\r\n                    onSubmit={onSubmit}\r\n                >\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"nombre\" >Nombre</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"nombre\"\r\n                            name=\"nombre\"\r\n                            placeholder=\"Ingrese nombre\"\r\n                            value={nombre}\r\n                            onChange={onchange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                    <label htmlFor=\"email\" >Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Ingrese Email\"\r\n                            value={email}\r\n                            onChange={onchange}\r\n                        />                            \r\n                    </div>\r\n\r\n                   <div className=\"campo-form\">\r\n                    <label htmlFor=\"password\" >Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Ingrese Password\"\r\n                            value={password}\r\n                            onChange={onchange}\r\n                        />                            \r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                    <label htmlFor=\"confirmar\" > Confirmar Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"confirmar\"\r\n                            name=\"confirmar\"\r\n                            placeholder=\"Repite Password\"\r\n                            value={confirmar}\r\n                            onChange={onchange}\r\n                        />                            \r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <input\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primario btn-block\"\r\n                            value=\"Registrarme\"\r\n                        />\r\n                    </div>\r\n\r\n\r\n                </form>\r\n\r\n                <Link to={'/'} className=\"enlace-cuenta\">\r\n                    Volver a Iniciar Sesión\r\n                </Link>\r\n            \r\n\r\n            </div>\r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default NuevaCuenta;","import { createContext } from 'react';\r\n\r\nconst proyectoContext = createContext();\r\n\r\n\r\nexport default proyectoContext;","import React, { Fragment, useState, useContext } from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\n\r\nconst NuevoProyecto = () => {\r\n\r\n    const proyectosContext = useContext(proyectoContext);\r\n\r\n    const {formulario, errorformulario, mostrarFormulario, agregarProyecto, mostrarError}= proyectosContext;\r\n\r\n    const [proyecto, guardarProyecto]= useState({\r\n        nombre:''\r\n    })\r\n\r\n     \r\n    const {nombre}= proyecto;\r\n\r\n    const onChangeProyecto = e=>{\r\n        guardarProyecto({\r\n            ...proyecto,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmitProyecto=e=>{\r\n        e.preventDefault();\r\n\r\n        // Validar el proyecto\r\n\r\n        if(nombre === ''){\r\n            mostrarError();\r\n            return;\r\n        }\r\n\r\n        // agregar al state\r\n        agregarProyecto(proyecto)\r\n\r\n        // reiniciar el form\r\n\r\n        guardarProyecto({\r\n            nombre: ''\r\n        })\r\n\r\n    }\r\n\r\n    const onClickFormulario = ()=>{\r\n        mostrarFormulario();\r\n    }\r\n\r\n    return ( \r\n\r\n        <Fragment>\r\n\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-block btn-primario\"\r\n                onClick={onClickFormulario}\r\n            >\r\n                Nuevo Proyecto\r\n             </button>\r\n\r\n            {formulario\r\n                ?\r\n                (\r\n                    <form\r\n                        className=\"formulario-nuevo-proyecto\"\r\n                        onSubmit={onSubmitProyecto}\r\n                    >\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"input-text\"\r\n                            placeholder=\"Nuevo Proyecto\"\r\n                            name=\"nombre\"\r\n                            value={nombre}\r\n                            onChange={onChangeProyecto}\r\n                        />\r\n\r\n                        <input\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primario btn-block\"\r\n                            value=\"Agregar Proyecto\"\r\n                        />\r\n\r\n                    </form>\r\n                )\r\n                :\r\n                null}\r\n\r\n                { errorformulario ? <p className=\"mensaje error\">EL nombre del proyecto/tarea es obligatorio</p> : null }\r\n\r\n        </Fragment>\r\n\r\n\r\n     );\r\n}\r\n \r\nexport default NuevoProyecto;","import { createContext } from 'react';\r\n\r\nconst tareaContext = createContext();\r\n\r\nexport default tareaContext;\r\n","import React, { useContext } from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\nconst Proyecto = ({proyecto}) => {\r\n\r\n    const proyectosContext = useContext(proyectoContext)\r\n    const {proyectoActual}= proyectosContext\r\n\r\n    const tareasContext = useContext(tareaContext)\r\n    const {obtenerTareas}= tareasContext\r\n\r\n    const seleccionarProyecto = id =>{\r\n        proyectoActual(id); //fijar un proyecto actual\r\n        obtenerTareas(id); // Filtrar las tareas cuando se de click\r\n    }\r\n    \r\n\r\n    return ( \r\n\r\n        \r\n\r\n        <li>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-blank\"\r\n                onClick={()=> seleccionarProyecto(proyecto._id)}\r\n            >{proyecto.nombre}</button>\r\n\r\n        </li>\r\n\r\n\r\n\r\n\r\n     );\r\n     \r\n}\r\n \r\nexport default Proyecto;","import React, {useContext, useEffect} from 'react';\r\nimport Proyecto from './Proyecto';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\n\r\n\r\n\r\nconst ListadoProyectos = () => {\r\n\r\n    // extrar proyectos de state inicial\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const {mensaje, proyectos, obtenerProyectos}=proyectosContext;\r\n\r\n    const alertaContext = useContext(AlertaContext)\r\n    const {alerta, mostrarAlerta}= alertaContext\r\n\r\n    useEffect(() => {\r\n        // si hay un error\r\n        if(mensaje){\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria)\r\n        }\r\n        obtenerProyectos();\r\n        // eslint-disable-next-line\r\n    }, [mensaje])\r\n\r\n    if(proyectos.length === 0 ) return <p>No hay proyectos comienza creando uno</p>;\r\n\r\n    return ( \r\n\r\n        <ul className=\"listado-proyectos\">\r\n\r\n               {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>): null}\r\n            <TransitionGroup>\r\n\r\n                {proyectos.map(proyecto => (\r\n                    <CSSTransition\r\n                      key={proyecto._id}\r\n                      timeout={500}\r\n                      classNames=\"proyecto\"\r\n                    >\r\n                        <Proyecto\r\n                          \r\n                            proyecto={proyecto}\r\n                        />\r\n                    </CSSTransition>\r\n\r\n                ))}\r\n            </TransitionGroup>\r\n\r\n        </ul>\r\n\r\n     );\r\n\r\n}\r\n \r\nexport default ListadoProyectos;","import React from 'react';\r\nimport NuevoProyecto from '../proyecto/NuevoProyecto'\r\nimport ListadoProyectos from '../proyecto/ListadoProyectos'\r\n\r\n\r\n\r\n\r\nconst Sidebar = () => {\r\n    return ( \r\n\r\n        <aside>\r\n            <h1>MERN <span>Tasks</span></h1>\r\n\r\n            <NuevoProyecto/>\r\n\r\n            <div className=\"proyectos\">\r\n                <h2>Tus proyectos</h2>\r\n\r\n                <ListadoProyectos/>\r\n\r\n\r\n            </div>\r\n\r\n        </aside>\r\n     );\r\n}\r\n \r\nexport default Sidebar;","import React, { useContext, useEffect } from 'react';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\n\r\nconst Barra = () => {\r\n\r\n    const authContext = useContext(AuthContext)\r\n    const {usuario, usuarioAutenticado, cerrarSesion} = authContext\r\n\r\n    \r\n    useEffect(() => {\r\n        usuarioAutenticado()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return ( \r\n\r\n        <header className=\"app-header\">\r\n            {usuario ?  <p className=\"nombre-usuario\">Hola <span>{usuario.nombre}</span></p> : null}\r\n\r\n           \r\n\r\n            <nav className=\"nav-principal\">\r\n                <button\r\n                    className=\"btn btn-blank cerrar-sesion\"\r\n                    onClick={()=> cerrarSesion()}\r\n                >\r\n                    Cerrar Sesión</button>\r\n            </nav>\r\n\r\n        </header>\r\n\r\n\r\n     );\r\n}\r\n \r\nexport default Barra;","import React, { useContext, useState, useEffect } from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext'\r\n\r\n\r\n\r\nconst FormTarea = () => {\r\n\r\n    // Extraer si un proyecto esta activo\r\n\r\n    const proyectosContext = useContext(proyectoContext)\r\n    const {proyecto}= proyectosContext;\r\n\r\n    const tareasContext = useContext(tareaContext)\r\n    const {tareaseleccionada, errortarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea, limpiarTarea}= tareasContext\r\n\r\n    useEffect(() => {\r\n        if(tareaseleccionada !== null){\r\n            guardarTarea(tareaseleccionada)\r\n        }else{\r\n            guardarTarea({\r\n                nombre:''\r\n            })\r\n        }\r\n    \r\n    \r\n    }, [tareaseleccionada])\r\n\r\n    // State del formulario\r\n\r\n    const [tarea, guardarTarea]= useState({\r\n        nombre:''\r\n    })\r\n\r\n    // Extraer el nombre del proyecto\r\n    const {nombre}= tarea;\r\n\r\n    if(!proyecto) return null;\r\n\r\n    const [proyectoActual] = proyecto;\r\n\r\n    // Leer los valores del formulario\r\n\r\n    const handleChange = e =>{\r\n        guardarTarea({\r\n            ...tarea,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    const onSubmit=e=>{\r\n        e.preventDefault()\r\n\r\n        // Validar\r\n        if(nombre.trim()=== ''){\r\n            validarTarea();\r\n            return;\r\n        }\r\n\r\n       if(tareaseleccionada=== null){\r\n        //   agregar la tarea nueva al state\r\n            tarea.proyecto = proyectoActual._id;\r\n            \r\n            agregarTarea(tarea);\r\n       }else{\r\n\r\n        // es una tarea existente\r\n            actualizarTarea(tarea);\r\n\r\n            // elimina tarea seleccionada del state\r\n\r\n            limpiarTarea();\r\n\r\n       }\r\n\r\n\r\n        // agregar la nueva tarea al state de tarea, se agrega por id de proyecto y arranca false el estado\r\n        \r\n\r\n\r\n        // obtener y flitar las tareas actuales\r\n        obtenerTareas(proyectoActual.id)\r\n\r\n        // reinicial el form\r\n\r\n        guardarTarea({\r\n            nombre:''\r\n        })\r\n\r\n\r\n    }\r\n\r\n    return ( \r\n\r\n        <div className=\"formulario\">\r\n\r\n            <form\r\n                onSubmit={onSubmit}\r\n            >\r\n                <div className=\"contenedor-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"input-text\"\r\n                        placeholder=\"Nombre Tarea\"\r\n                        name=\"nombre\"\r\n                        value={nombre}\r\n                        onChange={handleChange}\r\n                    \r\n                    />\r\n                </div>\r\n                \r\n                <div className=\"contenedor-input\">\r\n                    <input\r\n                        type = \"submit\"\r\n                        className=\"btn btn-primario btn-submit btn-block\"\r\n                        value={tareaseleccionada ? 'Editar Tarea': 'Agregar Tarea'}\r\n\r\n                    />\r\n\r\n                </div>\r\n\r\n\r\n                \r\n            </form>\r\n\r\n            {errortarea ?<p className=\"mensaje error\">El nombre de la tarea es obligatorio</p> : null}\r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default FormTarea;","import React, { useContext } from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext'\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\n\r\nconst Tarea = ({tarea}) => {\r\n\r\n    const proyectosContext = useContext(proyectoContext)\r\n    const {proyecto}= proyectosContext\r\n\r\n    const tareasContext = useContext(tareaContext)\r\n    const {eliminarTarea, obtenerTareas, actualizarTarea, guardarTareaActual}= tareasContext\r\n\r\n    const [proyectoActual] = proyecto\r\n\r\n    const tareaEliminar = id=>{\r\n        eliminarTarea(id, proyecto._id)\r\n        obtenerTareas(proyectoActual.id)\r\n    }\r\n\r\n    // funcion que modifica el estado de las tareas\r\n\r\n    const cambiarEstado = tarea=>{\r\n        if(tarea.estado){\r\n            tarea.estado = false;\r\n        }else{\r\n            tarea.estado = true\r\n        }\r\n        actualizarTarea(tarea)\r\n    }\r\n\r\n    // agrega una tarea actual cuando el usuario desea editarla\r\n    const seleccionarTarea= tarea =>{\r\n        guardarTareaActual(tarea);\r\n\r\n    }\r\n\r\n    return (\r\n        <li className=\"tarea sombra\">\r\n            <p>{tarea.nombre}</p>\r\n            \r\n            <div className=\"estado\">\r\n                {tarea.estado\r\n                    ?\r\n                    (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"completo\"\r\n                            onClick={()=>cambiarEstado(tarea)}\r\n                        >Completo</button>\r\n                    )\r\n                    :\r\n                    (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"incompleto\"\r\n                            onClick={()=>cambiarEstado(tarea)}\r\n                        >Incompleto</button>\r\n                    )\r\n                }   \r\n            </div>\r\n            <div className=\"acciones\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primario\"\r\n                    onClick={()=>seleccionarTarea(tarea)}\r\n                >Editar</button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secundario\"\r\n                    onClick={()=>tareaEliminar(tarea._id)}\r\n                >Eliminar</button>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </li>\r\n       \r\n      );\r\n}\r\n \r\nexport default Tarea;","import React, { Fragment, useContext} from 'react';\r\nimport Tarea from './Tarea';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nconst ListadoTareas = () => {\r\n\r\n    // Extrar proyectos de state inicial\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { proyecto, eliminarProyecto } = proyectosContext;\r\n\r\n    // obtener las tareas del proyecto\r\n    const tareasContext = useContext(tareaContext);\r\n    const { tareasproyecto } = tareasContext;\r\n\r\n    // Si no hay proyecto seleccionado\r\n    if(!proyecto) return <h2>Selecciona un proyecto</h2>;\r\n\r\n    // Array destructuring para extraer el proyecto actual\r\n    const [proyectoActual] =  proyecto;\r\n\r\n    // Elimina un proyecto\r\n    const onClickEliminar = () => {\r\n        eliminarProyecto(proyectoActual._id)\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h2>Proyecto: {proyectoActual.nombre} </h2>\r\n\r\n            <ul className=\"listado-tareas\">\r\n                {tareasproyecto.length === 0 \r\n                    ? (<li className=\"tarea\"><p>No hay tareas</p></li>) \r\n                    : \r\n                    <TransitionGroup>\r\n                    {tareasproyecto.map(tarea => (\r\n                        <CSSTransition\r\n                            key={tarea.id}\r\n                            timeout={200}\r\n                            classNames=\"tarea\"\r\n                        >\r\n                            <Tarea \r\n                                tarea={tarea}\r\n                            />\r\n                        </CSSTransition>\r\n                    ))}\r\n                    </TransitionGroup>\r\n                }\r\n            </ul>\r\n\r\n            <button     \r\n                type=\"button\"\r\n                className=\"btn btn-eliminar\"\r\n                onClick={onClickEliminar}\r\n            >Eliminar Proyecto &times;</button>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default ListadoTareas;","import React, {useContext, useEffect} from 'react';\r\nimport Sidebar from '../layout/Sidebar';\r\nimport Barra from '../layout/Barra';\r\nimport FormTarea from '../tareas/FormTarea'\r\nimport ListadoTareas from '../tareas/ListadoTareas'\r\nimport AuthContext from '../../context/autenticacion/authContext'\r\n\r\n\r\n\r\n\r\n\r\nconst Proyectos = () => {\r\n\r\n    // extraer la info de autenticación\r\n\r\n    const authContext = useContext(AuthContext)\r\n    const{usuarioAutenticado}= authContext\r\n\r\n    useEffect(() => {\r\n     \r\n        usuarioAutenticado()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    return ( \r\n     \r\n        <div className=\"contenedor-app\">\r\n\r\n          <Sidebar/>\r\n\r\n\r\n            <div className=\"seccion-principal\">\r\n\r\n                <Barra/>\r\n\r\n                <main>\r\n                <FormTarea/>\r\n\r\n                    <div className=\"contenedor-tareas\">\r\n                    <ListadoTareas/>\r\n\r\n                    </div>\r\n\r\n                </main>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n     );\r\n}\r\n \r\nexport default Proyectos;","import {\r\n    FORMULARIO_PROYECTO,\r\n    OBTENER_PROYECTOS,\r\n    AGREGAR_PROYECTO,\r\n    PROYECTO_ERROR,\r\n    VALIDAR_FORMULARIO,\r\n    PROYECTO_ACTUAL,\r\n    ELIMINAR_PROYECTO,\r\n   \r\n} from '../../types'\r\n\r\nexport default (state, action)=>{\r\n\r\n    switch(action.type){\r\n\r\n        case FORMULARIO_PROYECTO:\r\n            return{\r\n                ...state,\r\n                formulario: true\r\n            }\r\n\r\n        case OBTENER_PROYECTOS:\r\n            console.log(action.payload)\r\n            return{\r\n                ...state,\r\n                proyectos: action.payload\r\n            }\r\n\r\n        case AGREGAR_PROYECTO:\r\n            return {\r\n                ...state,\r\n                proyectos: [action.payload,...state.proyectos ],\r\n                formulario: false,\r\n                errorformulario: false\r\n            }  \r\n            \r\n        case VALIDAR_FORMULARIO:\r\n            return {\r\n                ...state,\r\n                errorformulario: true\r\n            }\r\n\r\n        case PROYECTO_ACTUAL:\r\n            return{\r\n                ...state,\r\n                proyecto: state.proyectos.filter(proyecto=> proyecto._id === action.payload)\r\n            }\r\n\r\n        case ELIMINAR_PROYECTO:\r\n            return{\r\n                ...state,\r\n                proyectos: state.proyectos.filter(proyecto=> proyecto._id !== action.payload),\r\n                proyecto: null\r\n            }\r\n        case PROYECTO_ERROR:\r\n            return{\r\n                ...state,\r\n                mensaje: action.payload\r\n            }\r\n       \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO'\r\nexport const OBTENER_PROYECTOS ='OBTENER_PROYECTOS'\r\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO'\r\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO'\r\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL'\r\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO'\r\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR'\r\n\r\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO'\r\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA'\r\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA'\r\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA'\r\n\r\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL'\r\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA'\r\nexport const LIMPIAR_TAREA = 'LIMPIAR_TAREA'\r\n\r\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA'\r\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA'\r\n\r\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO'\r\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR'\r\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO'\r\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO'\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\r\nexport const CERRAR_SESION = 'CERRAR_SESION'\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nconst clienteAxios = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL\r\n});\r\n\r\nexport default clienteAxios;","import React, { useReducer } from 'react';\r\n\r\n\r\nimport proyectoContext from './proyectoContext'\r\nimport proyectoReducer from './proyectoReducer'\r\nimport {\r\n    FORMULARIO_PROYECTO,\r\n    OBTENER_PROYECTOS,\r\n    AGREGAR_PROYECTO,\r\n    PROYECTO_ERROR,\r\n    VALIDAR_FORMULARIO,\r\n    PROYECTO_ACTUAL,\r\n    ELIMINAR_PROYECTO\r\n} from '../../types'\r\n\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst ProyectoState = props => {\r\n   \r\n\r\n    const initialState = {\r\n\r\n        proyectos: [],\r\n        formulario: false,\r\n        errorformulario: false,\r\n        proyecto: null,\r\n        mensaje: null,\r\n\r\n\r\n    }\r\n\r\n    // Dispach para ejecutar las acciones\r\n\r\n    const [state, dispatch] = useReducer(proyectoReducer, initialState)\r\n\r\n    // Serie de funciones para el CRUD\r\n\r\n    const mostrarFormulario =()=>{\r\n        dispatch({\r\n            type: FORMULARIO_PROYECTO\r\n        })\r\n    }\r\n\r\n    // Obtener los proyectos\r\n\r\n    const obtenerProyectos = async () =>{\r\n     \r\n        try {\r\n            const resultado = await clienteAxios.get('/api/proyectos');\r\n\r\n            dispatch({\r\n                type: OBTENER_PROYECTOS,\r\n                payload: resultado.data.proyectos\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Agregar nuevo proyecto\r\n\r\n    const agregarProyecto = async proyecto =>{\r\n       \r\n        try {\r\n            const resultado = await clienteAxios.post('/api/proyectos', proyecto)\r\n            console.log(resultado)\r\n\r\n            // Insertar el proyecto en el state\r\n            dispatch({\r\n                type: AGREGAR_PROYECTO,\r\n                payload: resultado.data\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n      \r\n\r\n    }\r\n    // Valida el formulario por errores\r\n\r\n    const mostrarError=()=>{\r\n        dispatch({\r\n            type: VALIDAR_FORMULARIO\r\n        })\r\n    }\r\n\r\n    // selecciona el proyecto que el usuario dio click\r\n\r\n    const proyectoActual = proyectoId=>{\r\n        dispatch({\r\n            type: PROYECTO_ACTUAL,\r\n            payload: proyectoId\r\n        })\r\n    }\r\n\r\n \r\n    const eliminarProyecto = async proyectoId =>{\r\n       \r\n        try {\r\n            await clienteAxios.delete(`/api/proyectos/${proyectoId}`)\r\n\r\n            dispatch({\r\n                type: ELIMINAR_PROYECTO,\r\n                payload: proyectoId\r\n            })\r\n        } catch (error) {\r\n\r\n            const alerta= {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n           \r\n            dispatch({\r\n\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <proyectoContext.Provider\r\n            value={{\r\n                proyectos: state.proyectos,\r\n                formulario: state.formulario,\r\n                errorformulario: state.errorformulario,\r\n                proyecto: state.proyecto,\r\n                mensaje: state.mensaje,\r\n                mostrarFormulario,\r\n                obtenerProyectos,\r\n                agregarProyecto,\r\n                mostrarError,\r\n                proyectoActual,\r\n                eliminarProyecto\r\n\r\n            }}\r\n        >\r\n\r\n            {props.children}\r\n        </proyectoContext.Provider>\r\n\r\n    )\r\n}\r\n\r\n\r\n \r\nexport default ProyectoState;\r\n\r\n\r\n","import {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA,\r\n    LIMPIAR_TAREA\r\n\r\n} from '../../types'\r\n\r\nexport default (state, action) =>{\r\n    switch(action.type){\r\n        case TAREAS_PROYECTO:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: action.payload\r\n            }\r\n        \r\n        case AGREGAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: [action.payload, ...state.tareasproyecto ],\r\n                errortarea: false\r\n            }\r\n        case VALIDAR_TAREA:\r\n            return{\r\n                ...state,\r\n                errortarea: true\r\n            }\r\n        case ELIMINAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.filter(tarea => tarea._id !== action.payload)\r\n            }\r\n        case ACTUALIZAR_TAREA:\r\n    \r\n            return {\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.map(tarea => tarea._id === action.payload._id ? action.payload : tarea )\r\n            }\r\n        case TAREA_ACTUAL:\r\n            return{\r\n                ...state,\r\n                tareaseleccionada: action.payload\r\n            }\r\n        case LIMPIAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareaseleccionada: null\r\n            }\r\n             \r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n","import React, {useReducer} from 'react';\r\nimport TareaContext from './tareaContext';\r\nimport TareaReducer from './tareaReducer';\r\n\r\n\r\nimport {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n     TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA,\r\n    LIMPIAR_TAREA\r\n} from '../../types';\r\n\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst TareaState = (props) => {\r\n\r\n    const initialState={\r\n\r\n        tareasproyecto: [], \r\n        errortarea: false,\r\n        tareaseleccionada: null\r\n\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(TareaReducer, initialState)\r\n\r\n\r\n    // Obtener las tareas de un proyecto\r\n\r\n    const obtenerTareas= async proyecto=>{\r\n\r\n        try{\r\n\r\n            const resultado = await clienteAxios.get('/api/tareas', { params: {proyecto}});\r\n            console.log(resultado)\r\n\r\n            dispatch({\r\n                type:TAREAS_PROYECTO,\r\n                payload: resultado.data.tareas\r\n               \r\n            })\r\n\r\n        }catch (error){\r\n            console.log(error)\r\n        }\r\n\r\n     \r\n    }\r\n\r\n    // Agregar tarea al proyecto\r\n\r\n    const agregarTarea = async tarea =>{\r\n\r\n        try {\r\n\r\n            const resultado = await clienteAxios.post('api/tareas', tarea);\r\n            console.log(resultado)\r\n\r\n            dispatch({\r\n                type: AGREGAR_TAREA,\r\n                payload: tarea\r\n            })\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n        \r\n     \r\n    }\r\n\r\n    // Valida y muestra un error en caso de que sea necesario\r\n\r\n    const validarTarea = ()=>{\r\n        dispatch({\r\n            type: VALIDAR_TAREA\r\n        })\r\n    }\r\n\r\n    // eliminar tarea por ID\r\n\r\n    const eliminarTarea = async (id, proyecto) =>{\r\n        try {\r\n            await clienteAxios.delete(`/api/tareas/${id}`, {params: {proyecto}})\r\n\r\n            dispatch({\r\n                type: ELIMINAR_TAREA,\r\n                payload: id\r\n            })\r\n\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n\r\n     \r\n    }\r\n\r\n\r\n\r\n      // modifica o edita una tarea\r\n\r\n      const actualizarTarea =async tarea=>{\r\n\r\n          try {\r\n              const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea)\r\n               \r\n              dispatch({\r\n                  type: ACTUALIZAR_TAREA,\r\n                  payload: resultado.data.tarea\r\n              })\r\n          } catch (error) {\r\n\r\n          }\r\n      }\r\n    // Extrae una tarea para edicion\r\n\r\n    const guardarTareaActual = tarea=>{\r\n        dispatch({\r\n            type: TAREA_ACTUAL,\r\n            payload: tarea\r\n        })\r\n    }\r\n\r\n  \r\n\r\n    // elimina la tarea seleccionada\r\n\r\n    const limpiarTarea = ()=>{\r\n        dispatch({\r\n            type : LIMPIAR_TAREA\r\n        })\r\n    }\r\n  \r\n    return ( \r\n\r\n        <TareaContext.Provider\r\n            value={{\r\n             \r\n                tareasproyecto: state.tareasproyecto,\r\n                errortarea: state.errortarea,\r\n                tareaseleccionada: state.tareaseleccionada,\r\n                obtenerTareas,\r\n                agregarTarea,\r\n                validarTarea,\r\n                eliminarTarea,              \r\n                guardarTareaActual,\r\n                actualizarTarea,\r\n                limpiarTarea\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TareaContext.Provider>\r\n     );\r\n}\r\n \r\nexport default TareaState;","import { MOSTRAR_ALERTA,\r\n     OCULTAR_ALERTA} from '../../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case MOSTRAR_ALERTA:\r\n            return {\r\n                alerta: action.payload\r\n            }\r\n        case OCULTAR_ALERTA:\r\n            return {\r\n                alerta: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useReducer} from 'react'\r\nimport alertaContext from './alertaContext';\r\nimport alertaReducer from './alertaReducer';\r\n\r\n\r\nimport {MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\r\n\r\nconst AlertaState = (props) => {\r\n\r\n    const initialState ={\r\n        alerta: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(alertaReducer, initialState)\r\n    \r\n    // Funciones\r\n    const mostrarAlerta = (msg, categoria) => {\r\n        dispatch({\r\n            type:  MOSTRAR_ALERTA,\r\n            payload: {\r\n                msg, \r\n                categoria\r\n            }\r\n        });\r\n\r\n        // Después de 5 segundos limpiar la alerta\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: OCULTAR_ALERTA\r\n            })\r\n        }, 5000);\r\n    }\r\n\r\n\r\n    return ( \r\n\r\n        <alertaContext.Provider\r\n            value={{\r\n                alerta: state.alerta,\r\n                mostrarAlerta\r\n            }}\r\n        >\r\n            {props.children}\r\n        </alertaContext.Provider>\r\n     );\r\n}\r\n \r\nexport default AlertaState;\r\n\r\n","import {\r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION  \r\n\r\n} from '../../types';\r\n\r\nexport default (state, action)=>{\r\n    switch(action.type){\r\n        \r\n        case REGISTRO_EXITOSO:\r\n        case LOGIN_EXITOSO:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return{\r\n                ...state,\r\n                autenticado: true,\r\n                mensaje: null,\r\n                cargando: false\r\n            }\r\n\r\n        case OBTENER_USUARIO:\r\n            return{\r\n                ...state,\r\n                autenticado: true,\r\n                usuario: action.payload, \r\n                cargando: false \r\n            }\r\n        case CERRAR_SESION:\r\n        case LOGIN_ERROR:\r\n        case REGISTRO_ERROR:\r\n            localStorage.removeItem('token');\r\n            return{\r\n                ...state,\r\n                token: null,\r\n                usuario: null,\r\n                autenticado: null,\r\n                mensaje: action.payload,\r\n                cargando: false\r\n\r\n            }\r\n     \r\n        // case LOGIN_EXITOSO:\r\n        //     return{\r\n\r\n        //     }\r\n        // case LOGIN_ERROR:\r\n        //     return{\r\n\r\n        //     }\r\n        // case CERRAR_SESION:\r\n        //     return{\r\n\r\n        //     }\r\n        default:\r\n            return state;\r\n    }\r\n  \r\n}","import clienteAxios from './axios';\r\n\r\nconst tokenAuth = token =>{\r\n    if(token){\r\n        clienteAxios.defaults.headers.common['x-auth-token'] = token\r\n\r\n    }else{\r\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\r\n    }\r\n\r\n}\r\n\r\nexport default tokenAuth;","import React, {useReducer} from 'react';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\nimport clienteAxios from '../../config/axios'\r\nimport tokenAuth from '../../config/token'\r\n\r\nimport {\r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION  \r\n\r\n} from '../../types';\r\n\r\nconst AuthState = (props) => {\r\n\r\n    const initialState ={\r\n        token: localStorage.getItem('token'),\r\n        autenticado: null,\r\n        usuario: null,\r\n        mensaje:null,\r\n        cargando: true\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(AuthReducer, initialState)\r\n\r\n    // Las funciones\r\n\r\n    const registrarUsuario = async datos=>{\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/usuarios', datos);\r\n            console.log(respuesta.data)\r\n\r\n            dispatch({\r\n                type: REGISTRO_EXITOSO,\r\n                payload: respuesta.data\r\n            })\r\n            usuarioAutenticado();\r\n            \r\n        } catch (error) {\r\n            console.log(error.response.data.msg);\r\n\r\n            const alerta ={\r\n                msg: error.response.data.msg,\r\n                categoria:'alerta-error'\r\n            }\r\n\r\n            dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: alerta\r\n            })\r\n            \r\n        }\r\n    }\r\n\r\n    // Retorna el usuario autenticado\r\n\r\n    const usuarioAutenticado = async () =>{\r\n        const token = localStorage.getItem('token')\r\n\r\n        if(token){\r\n            // TODO: Función para enviar el token por headers  \r\n            tokenAuth(token)\r\n            \r\n        }\r\n\r\n        try {\r\n            const respuesta = await clienteAxios.get('/api/auth')\r\n            // console.log(respuesta)\r\n            dispatch({\r\n                type: OBTENER_USUARIO,\r\n                payload: respuesta.data.usuario\r\n            })\r\n\r\n            \r\n        } catch (error) {\r\n            console.log(error.response)\r\n            dispatch({\r\n                type: LOGIN_ERROR\r\n            })\r\n        }\r\n    \r\n\r\n    }\r\n\r\n    // Cuando el usuario inicia sesion\r\n\r\n    const iniciarSesion = async datos =>{\r\n\r\n        try {\r\n\r\n            const respuesta = await clienteAxios.post('/api/auth', datos);\r\n\r\n            dispatch({\r\n                type: LOGIN_EXITOSO,\r\n                payload: respuesta.data\r\n            })\r\n\r\n            usuarioAutenticado();\r\n            \r\n            \r\n        } catch (error) {\r\n            console.log(error.response.data.msg)\r\n\r\n            const alerta ={\r\n                msg: error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n\r\n            dispatch({\r\n                type: LOGIN_ERROR,\r\n                payload: alerta\r\n            })\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    // Cierra la sesion del usuario\r\n\r\n    const cerrarSesion =()=>{\r\n        dispatch({\r\n            type: CERRAR_SESION\r\n        })\r\n    }\r\n\r\n\r\n    return ( \r\n        <AuthContext.Provider\r\n            value={{\r\n                token: state.token,\r\n                autenticado: state.autenticado,\r\n                usuario: state.usuario,\r\n                mensaje: state.mensaje,\r\n                cargando: state.cargando,\r\n                registrarUsuario,\r\n                iniciarSesion,\r\n                usuarioAutenticado,\r\n                cerrarSesion\r\n\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n     );\r\n}\r\n \r\nexport default AuthState;","import React, {useContext, useEffect} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport AuthContext from '../../context/autenticacion/authContext'\r\n\r\nconst RutaPrivada = ({component: Component,...props}) => {\r\n\r\n\r\n    const authContext = useContext(AuthContext)\r\n    const {autenticado, cargando, usuarioAutenticado}= authContext;\r\n\r\n    useEffect(() => {\r\n        usuarioAutenticado()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return ( \r\n\r\n        <Route {...props} render = {props => !autenticado && !cargando ? (\r\n            <Redirect to=\"/\"/>\r\n        ) :(\r\n\r\n            <Component {...props}/>\r\n        ) } \r\n        />\r\n\r\n     );\r\n}\r\n \r\nexport default RutaPrivada;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport Proyectos from './components/proyecto/Proyectos';\n\nimport ProyectoState from './context/proyectos/proyectoState';\nimport TareaState from './context/tareas/tareaState';\nimport AlertaState from './context/alertas/alertaState';\nimport AuthState from './context/autenticacion/authState';\nimport tokenAuth from './config/token';\nimport RutaPrivada from './components/rutas/RutaPrivada';\n\n\n// Revisar si tenemos un token\n\nconst token = localStorage.getItem('token');\nif(token){\n tokenAuth(token)\n}\n\n\nfunction App() {\n\n \n  return (\n\n    <ProyectoState>\n      <TareaState>\n        <AlertaState>\n          <AuthState>\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta} />\n                <RutaPrivada exact path=\"/proyectos\" component={Proyectos} />\n              </Switch>\n            </Router>\n          </AuthState>\n        </AlertaState>\n      </TareaState>\n    </ProyectoState>\n\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}